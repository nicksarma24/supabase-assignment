export interface ReadResponseV2<T> {
    success: boolean;
    message?: string;
    item: T | null;
}
export interface WriteResponseV2<T> {
    success: boolean;
    message?: string;
    item?: T;
}
export interface UpdateResponseV2<T> {
    success: boolean;
    message?: string;
    item?: T;
}
export interface DeleteResponseV2 {
    success: boolean;
    message?: string;
}
export interface PaginationResponseV2<T> {
    success: boolean;
    message?: string;
    page: number;
    num_pages: number;
    page_size: number;
    items: T[];
}
export interface ErrorResponseV2 {
    success: false;
    message: string;
}
declare const _default: {
    get: (path: string, useSynthesisServer?: boolean) => Promise<Response>;
    post: (path: string, data?: Record<string, any>, useSynthesisServer?: boolean) => Promise<Response>;
    put: (path: string, data?: Record<string, any>, useSynthesisServer?: boolean) => Promise<Response>;
    delete: (path: string, useSynthesisServer?: boolean) => Promise<Response>;
    errorResponse: (e: any) => ErrorResponseV2;
};
export default _default;
export declare function concatUint8Arrays(arrays: Uint8Array[], totalLength?: number): Uint8Array;
