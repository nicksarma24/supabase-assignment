import { DeleteResponseV2, ErrorResponseV2, PaginationResponseV2, ReadResponseV2, UpdateResponseV2, WriteResponseV2 } from './util';
export interface Voice {
    uuid: string;
    name: string;
    status: string;
    default_language: string;
    supported_languages: string[];
    created_at: Date;
    updated_at: Date;
}
export interface VoiceInput {
    name: string;
    dataset_url?: string;
    callback_uri?: string;
    consent?: string;
}
declare const _default: {
    all: (page: number, pageSize: number) => Promise<PaginationResponseV2<Voice> | ErrorResponseV2>;
    get: (uuid: string) => Promise<ReadResponseV2<Voice> | ErrorResponseV2>;
    create: (voiceInput: VoiceInput) => Promise<WriteResponseV2<Voice> | ErrorResponseV2>;
    update: (uuid: string, voiceInput: VoiceInput) => Promise<UpdateResponseV2<Voice> | ErrorResponseV2>;
    destroy: (uuid: string) => Promise<DeleteResponseV2 | ErrorResponseV2>;
    build: (uuid: string) => Promise<{
        success: boolean;
        message?: string;
    } | ErrorResponseV2>;
};
export default _default;
