/// <reference types="node" />
import { ErrorResponseV2, PaginationResponseV2, UpdateResponseV2, DeleteResponseV2, ReadResponseV2, WriteResponseV2 } from './util';
export interface Recording {
    uuid: string;
    name: string;
    text: string;
    emotion: string;
    is_active: boolean;
    audio_src: string;
    created_at: Date;
    updated_at: Date;
}
export interface RecordingInput {
    name: string;
    text: string;
    emotion: string;
    is_active: boolean;
}
declare const _default: {
    all: (voiceUuid: string, page: number, pageSize: number) => Promise<PaginationResponseV2<Recording> | ErrorResponseV2>;
    get: (voiceUuid: string, uuid: string) => Promise<ReadResponseV2<Recording> | ErrorResponseV2>;
    create: (voiceUuid: string, recordingInput: RecordingInput, buffer: Buffer, fileSizeInBytes: number) => Promise<WriteResponseV2<Recording> | ErrorResponseV2>;
    update: (voiceUuid: string, uuid: string, recordingInput: RecordingInput) => Promise<UpdateResponseV2<Recording> | ErrorResponseV2>;
    destroy: (voiceUuid: string, uuid: string) => Promise<DeleteResponseV2 | ErrorResponseV2>;
};
export default _default;
