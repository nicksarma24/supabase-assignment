import e from"isomorphic-fetch";import t from"isomorphic-form-data";let a="",s="https://app.resemble.ai/api/",r="";const n={"Content-Type":"application/json","x-access-token":a},i={"Content-Type":"application/json",Authorization:`Token token=${a}`},c={headers:()=>i,synthesisServerHeaders:()=>n,setBaseUrl:e=>{s=e,e.endsWith("/")||(s+="/")},setApiKey:e=>{a=e,i.Authorization=`Token token=${e}`,n["x-access-token"]=e},setSynthesisUrl:e=>{r=e,e.endsWith("/")||(r+="/")},endpoint:(e,t)=>{let a=t.startsWith("/")?t.substring(1):t;return`${s}${e}/${a}`},synServerUrl:e=>{let t=e.startsWith("/")?e.substring(1):e;return`${r}${t}`}};function o(e){this.wrapped=e}function u(e){var t,a;function s(t,a){try{var n=e[t](a),i=n.value,c=i instanceof o;Promise.resolve(c?i.wrapped:i).then(function(e){c?s("return"===t?"return":"next",e):r(n.done?"return":"normal",e)},function(e){s("throw",e)})}catch(e){r("throw",e)}}function r(e,r){switch(e){case"return":t.resolve({value:r,done:!0});break;case"throw":t.reject(r);break;default:t.resolve({value:r,done:!1})}(t=t.next)?s(t.key,t.arg):a=null}this._invoke=function(e,r){return new Promise(function(n,i){var c={key:e,arg:r,resolve:n,reject:i,next:null};a?a=a.next=c:(t=a=c,s(e,r))})},"function"!=typeof e.return&&(this.return=void 0)}function d(e){return new o(e)}function h(){return h=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var s in a)Object.prototype.hasOwnProperty.call(a,s)&&(e[s]=a[s])}return e},h.apply(this,arguments)}u.prototype["function"==typeof Symbol&&Symbol.asyncIterator||"@@asyncIterator"]=function(){return this},u.prototype.next=function(e){return this._invoke("next",e)},u.prototype.throw=function(e){return this._invoke("throw",e)},u.prototype.return=function(e){return this._invoke("return",e)};var p=(e,t=!1)=>fetch(t?c.synServerUrl(e):c.endpoint("v2",e),{method:"GET",headers:t?c.synthesisServerHeaders():c.headers()}),l=(e,t={},a=!1)=>fetch(a?c.synServerUrl(e):c.endpoint("v2",e),{method:"POST",headers:a?c.synthesisServerHeaders():c.headers(),body:JSON.stringify(t)}),m=(e,t={},a=!1)=>fetch(a?c.synServerUrl(e):c.endpoint("v2",e),{method:"PUT",headers:a?c.synthesisServerHeaders():c.headers(),body:JSON.stringify(t)}),f=(e,t=!1)=>fetch(t?c.synServerUrl(e):c.endpoint("v2",e),{method:"DELETE",headers:t?c.synthesisServerHeaders():c.headers()}),y=e=>({success:!1,message:`Library error: ${e}`});function w(e,t){if(0===e.length)return new Uint8Array(0);null!=t||(t=e.reduce((e,t)=>e+t.length,0));const a=new Uint8Array(t);let s=0;for(const t of e)a.set(t,s),s+=t.length;return a}var _={all:async(e,t)=>{try{const a=await p(`projects?page=${e}${t?`&page_size=${t}`:""}`);let s=await a.json();return s.success&&(s.items=s.items.map(e=>h({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)}))),s}catch(e){return y(e)}},get:async e=>{try{const t=await p(`projects/${e}`);let a=await t.json();return a.success&&(a=h({},a,{item:h({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return y(e)}},create:async e=>{try{const t=await l("projects",e);let a=await t.json();return a.success&&(a=h({},a,{item:h({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return y(e)}},update:async(e,t)=>{try{const a=await m(`projects/${e}`,t);let s=await a.json();return s.success&&(s=h({},s,{item:h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return y(e)}},destroy:async e=>{try{return(await f(`projects/${e}`)).json()}catch(e){return y(e)}}};const g=function(e=4096,t=!0,a=!1){if(e<2)throw new Error("Buffer size cannot be less than 2");if(e%2!=0)throw new Error("Buffer size must be evenly divisible by 2.");this.bufferSize=e,this.ignoreWavHeader=t,this.chunks=[],this.headerBuffer=new Uint8Array,this.processTimeStamps=a,this.timeStampsBuffer=[],this.allTimestampsProcessed=!1,this.timeStamps={}};g.prototype.setBufferSize=function(e){if(e<2)throw new Error("Buffer size cannot be less than 2");if(e%2!=0)throw new Error("Buffer size must be evenly divisible by 2.");this.bufferSize=e},g.prototype.setIgnoreWavHeader=function(e){this.ignoreWavHeader=e},g.prototype.decodeChunk=function(e){if(this.chunks.push(e),this.headerBuffer.length<36&&this.ignoreWavHeader&&!this.processTimeStamps){const e=w(this.chunks);if(e.length>=36){this.headerBuffer=e.slice(0,36);const t=e.slice(36);this.chunks=[],this.chunks.push(t)}}if(this.processTimeStamps&&!this.allTimestampsProcessed&&this.timeStampsBuffer.push(e),!this.ignoreWavHeader&&this.processTimeStamps&&!this.allTimestampsProcessed){const e=w(this.timeStampsBuffer),t=this.extractTimestampsFromBuffer(e);if(!t.timestamps)if(this.headerBuffer.length<36){const e=w(this.chunks);e.length>=36&&(this.headerBuffer=e.slice(0,36),this.chunks=[],this.chunks.push(this.headerBuffer))}else this.chunks=[],this.chunks.push(this.headerBuffer);if(t.timestamps&&null!==t.timestamps){if(this.headerBuffer.length<36){const e=w(this.chunks);if(e.length>=36){this.headerBuffer=e.slice(0,36),this.chunks=[];const a=e.slice(t.offset);this.chunks.push(this.headerBuffer),this.chunks.push(a)}}else{const e=w(this.timeStampsBuffer).slice(t.offset);this.chunks=[],this.chunks.push(this.headerBuffer),this.chunks.push(e)}this.timeStamps=t.timestamps,this.allTimestampsProcessed=!0,this.timeStampsBuffer=[]}}if(this.ignoreWavHeader&&this.processTimeStamps&&!this.allTimestampsProcessed){const e=w(this.timeStampsBuffer),t=this.extractTimestampsFromBuffer(e);if(!t.timestamps&&t.offset&&(this.chunks=[]),t.timestamps&&null!==t.timestamps){this.timeStamps=t.timestamps,this.allTimestampsProcessed=!0;const e=w(this.timeStampsBuffer).slice(t.offset);this.chunks=[],this.chunks.push(e)}}},g.prototype.flushBuffer=function(e=!1){const t=w(this.chunks);if(e&&t.length>0)return this.chunks=[],t;if(t.length>=this.bufferSize){const e=t.slice(0,this.bufferSize),a=t.slice(this.bufferSize);return this.chunks=[],this.chunks.push(a),e}return null},g.prototype.reset=function(){this.chunks=[],this.headerBuffer=new Uint8Array},g.prototype.getTimestamps=function(){return this.processTimeStamps&&this.allTimestampsProcessed?this.timeStamps:null},g.prototype.extractTimestampsFromBuffer=function(e){let t=0;t+=4,t+=4,t+=14;const a=new DataView(e.buffer,e.byteOffset,e.byteLength);let[s,r]=[a.getUint16(t,!0),a.getUint32(t+2,!0)];t+=14;const n=new TextDecoder("ascii");let i=n.decode(new Uint8Array(e.buffer,e.byteOffset+t,4));t+=4;const c={graph_chars:[],graph_times:[],phon_chars:[],phon_times:[]};if("cue "===i){let[s,o]=[a.getUint32(t,!0),a.getUint32(t+4,!0)];t+=8;let u={};if(t+s-4>e.length)return{timestamps:null,offset:t};for(let e=1;e<=o;e++){const e=a.getUint32(t,!0),s=a.getUint32(t+20,!0);u[e]=s,t+=24}i=n.decode(new Uint8Array(e.buffer,e.byteOffset+t,4)),s=a.getUint32(t+4,!0),t+=12;let d=t+s-4;if(d>e.length)return{timestamps:null,offset:t};for(;t<d;){const s=a.getUint32(t+4,!0),i=a.getUint32(t+8,!0),o=a.getUint32(t+12,!0);let d=n.decode(new Uint8Array(e.buffer,e.byteOffset+t+16,4)).trim();t+=28;const h=s-20,p=new TextDecoder("utf-8").decode(new Uint8Array(e.buffer,e.byteOffset+t,h-1));t+=h,t+=h%2;let l={grph:"graph",phon:"phon"}[d];c[`${l}_chars`].push(p),c[`${l}_times`].push([u[i]/r,(u[i]+o)/r])}return{timestamps:c,offset:t}}return{timestamps:null}};const v=async(e,t)=>{try{const a=await l(`projects/${e}/clips`,t);let s=await a.json();return s.success&&(s=h({},s,{item:h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return y(e)}};var $,b,j={all:async(e,t,a)=>{try{const s=await p(`projects/${e}/clips?page=${t}${a?`&page_size=${a}`:""}`),r=await s.json();return r.success&&r.items.map(e=>h({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)})),r}catch(e){return y(e)}},get:async(e,t)=>{try{const a=await p(`projects/${e}/clips/${t}`);let s=await a.json();return s.success&&(s=h({},s,{item:h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return y(e)}},createAsync:async(e,t)=>v(e,t),createSync:async(e,t)=>v(e,t),createDirect:async e=>{try{const t=await l("synthesize",e,!0);return await t.json()}catch(e){return y(e)}},stream:($=function*(e,t){const a=(null==t?void 0:t.getTimeStamps)||!1,s=(null==t?void 0:t.bufferSize)||4096,r=(null==t?void 0:t.ignoreWavHeader)||!1;try{const t=yield d(l("stream",h({},e,{wav_encoded_timestamps:a}),!0));if(!t.ok||!t.body){var n;const e=(null==(n=t.headers.get("content-type"))?void 0:n.includes("application/json"))?yield d(t.json()):null;throw Error(e&&e.message||t.status)}const i=new g(s,r,a);i.reset();const c=t.body.getReader();try{for(;;){const{done:e,value:t}=yield d(c.read());if(e)break;i.decodeChunk(t);const a=i.flushBuffer();null!==a&&(yield{data:a,timestamps:i.getTimestamps()})}}finally{c.releaseLock()}let o=i.flushBuffer();for(;null!==o;){const e=new Uint8Array(o);o=i.flushBuffer(),yield{data:e,timestamps:i.getTimestamps()}}o=i.flushBuffer(!0),null!==o&&(yield{data:o,timestamps:i.getTimestamps()})}catch(e){throw e}},b=function(){return new u($.apply(this,arguments))},function(e,t){return b.apply(this,arguments)}),updateAsync:async(e,t,a)=>{try{const s=await m(`projects/${e}/clips/${t}`,a);let r=await s.json();return r.success&&(r=h({},r,{item:h({},r.item,{created_at:new Date(r.item.created_at),updated_at:new Date(r.item.updated_at)})})),r}catch(e){return y(e)}},destroy:async(e,t)=>{try{return(await f(`projects/${e}/clips/${t}`)).json()}catch(e){return y(e)}}},D={all:async(e,t,a)=>{try{const s=await p(`voices/${e}/recordings?page=${t}${a?`&page_size=${a}`:""}`),r=await s.json();return r.success&&r.items.map(e=>h({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)})),r}catch(e){return y(e)}},get:async(e,t)=>{try{const a=await p(`voices/${e}/recordings/${t}`);let s=await a.json();return s.success&&(s=h({},s,{item:h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return y(e)}},create:async(a,s,r,n)=>{try{const i=new t;i.append("name",s.name),i.append("text",s.text),i.append("emotion",s.emotion),i.append("is_active",s.is_active?"true":"false"),i.append("file",r,{knownLength:n});const o=await e(c.endpoint("v2",`voices/${a}/recordings`),{method:"POST",headers:h({Authorization:c.headers().Authorization,"Content-Type":"multipart/form-data"},i.getHeaders?i.getHeaders():{}),body:i});let u=await o.json();return u.success&&(u=h({},u,{item:h({},u.item,{created_at:new Date(u.item.created_at),updated_at:new Date(u.item.updated_at)})})),u}catch(e){return y(e)}},update:async(e,t,a)=>{try{const s=await m(`voices/${e}/recordings/${t}`,a);let r=await s.json();return r.success&&(r=h({},r,{item:h({},r.item,{created_at:new Date(r.item.created_at),updated_at:new Date(r.item.updated_at)})})),r}catch(e){return y(e)}},destroy:async(e,t)=>{try{return(await f(`voices/${e}/recordings/${t}`)).json()}catch(e){return y(e)}}},k={all:async(e,t)=>{try{const a=await p(`voices?page=${e}${t?`&page_size=${t}`:""}`),s=await a.json();return s.success&&s.items.map(e=>h({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)})),s}catch(e){return y(e)}},get:async e=>{try{const t=await p(`voices/${e}`);let a=await t.json();return a.success&&(a=h({},a,{item:h({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return y(e)}},create:async e=>{try{const t=await l("voices",e);let a=await t.json();return a.success&&(a=h({},a,{item:h({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})})),a}catch(e){return y(e)}},update:async(e,t)=>{try{const a=await m(`voices/${e}`,t);let s=await a.json();return s.success&&(s=h({},s,{item:h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return y(e)}},destroy:async e=>{try{return(await f(`voices/${e}`)).json()}catch(e){return y(e)}},build:async e=>{try{return(await l(`voices/${e}/build`)).json()}catch(e){return y(e)}}},S={all:async(e,t,a)=>{try{const s=await p(`projects/${e}/batch?page=${t}${a?`&page_size=${a}`:""}`);let r=await s.json();return r.success&&(r.items=r.items.map(e=>h({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)}))),r}catch(e){return y(e)}},create:async(e,t,a,s)=>{try{const r={body:a,voice_uuid:t,sample_rate:null==s?void 0:s.sampleRate,output_format:null==s?void 0:s.outputFormat,precision:null==s?void 0:s.precision};null!=s&&s.callbackUri&&(r.callback_uri=null==s?void 0:s.callbackUri);const n=await l(`/projects/${e}/batch`,r);let i=await n.json();return i.success&&(i=h({},i,{created_at:new Date(i.item.created_at),updated_at:new Date(i.item.updated_at)})),i}catch(e){return y(e)}},get:async(e,t)=>{try{const a=await p(`projects/${e}/batch/${t}`);let s=await a.json();return s.success&&(s=h({},s,{item:h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})})),s}catch(e){return y(e)}},delete:async(e,t)=>{try{return(await f(`projects/${e}/batch/${t}`)).json()}catch(e){return y(e)}}},B={all:async(e,t)=>{try{const a=await p(`phonemes?page=${e}${t?`&page_size=${t}`:""}`);let s=await a.json();return s.success&&(s.items=s.items.map(e=>h({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)}))),s}catch(e){return y(e)}},create:async(e,t)=>{try{const a=await l("phonemes",{word:e,phonetic_transcription:t});let s=await a.json();return s.success&&(s.item=h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})),s}catch(e){return y(e)}},get:async e=>{try{const t=await p(`phonemes/${e}`);let a=await t.json();return a.success&&(a.item=h({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})),a}catch(e){return y(e)}},delete:async e=>{try{return(await f(`phonemes/${e}`)).json()}catch(e){return y(e)}}},T={all:async(e,t)=>{try{const a=await p(`term_substitutions?page=${e}${t?`&page_size=${t}`:""}`);let s=await a.json();return s.success&&(s.items=s.items.map(e=>h({},e,{created_at:new Date(e.created_at),updated_at:new Date(e.updated_at)}))),s}catch(e){return y(e)}},create:async(e,t)=>{try{const a=await l("term_substitutions",{original_text:e,replacement_text:t});let s=await a.json();return s.success&&(s.item=h({},s.item,{created_at:new Date(s.item.created_at),updated_at:new Date(s.item.updated_at)})),s}catch(e){return y(e)}},get:async e=>{try{const t=await p(`term_substitutions/${e}`);let a=await t.json();return a.success&&(a.item=h({},a.item,{created_at:new Date(a.item.created_at),updated_at:new Date(a.item.updated_at)})),a}catch(e){return y(e)}},delete:async e=>{try{return(await f(`term_substitutions/${e}`)).json()}catch(e){return y(e)}}};const U={setApiKey:c.setApiKey,setBaseUrl:c.setBaseUrl,setSynthesisUrl:c.setSynthesisUrl,v2:{projects:{all:_.all,create:_.create,update:_.update,get:_.get,delete:_.destroy},clips:{all:j.all,createSync:j.createSync,createAsync:j.createAsync,createDirect:j.createDirect,updateAsync:j.updateAsync,stream:j.stream,get:j.get,delete:j.destroy},voices:{all:k.all,create:k.create,update:k.update,build:k.build,get:k.get,delete:k.destroy},recordings:{all:D.all,get:D.get,create:D.create,update:D.update,delete:D.destroy},batch:{all:S.all,get:S.get,create:S.create,delete:S.delete},phonemes:{all:B.all,create:B.create,get:B.get,delete:B.delete},termSubstitutions:{all:T.all,get:T.get,create:T.create,delete:T.delete}}};export{U as Resemble};
//# sourceMappingURL=resemble.modern.js.map
